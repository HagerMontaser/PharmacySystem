// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PharmacySystem.Data;

#nullable disable

namespace PharmacySystem.Migrations
{
    [DbContext(typeof(PharmcySystemContext))]
    partial class PharmcySystemContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PharmacySystem.Models.Employee", b =>
                {
                    b.Property<string>("UserName")
                        .HasMaxLength(20)
                        .HasColumnType("nchar(20)")
                        .IsFixedLength();

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .HasColumnType("nchar(20)")
                        .IsFixedLength();

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.HasKey("UserName");

                    b.ToTable("Employee", (string)null);
                });

            modelBuilder.Entity("PharmacySystem.Models.Invoice", b =>
                {
                    b.Property<int>("Invoice_No")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Invoice_No"), 1L, 1);

                    b.Property<string>("CustName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Employee_Username")
                        .HasMaxLength(20)
                        .HasColumnType("nchar(20)")
                        .IsFixedLength();

                    b.Property<double?>("TotalPrice")
                        .HasColumnType("float");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.HasKey("Invoice_No");

                    b.HasIndex("Employee_Username");

                    b.ToTable("Invoice", (string)null);
                });

            modelBuilder.Entity("PharmacySystem.Models.Item", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<byte[]>("ImageData")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ImageName")
                        .HasMaxLength(20)
                        .HasColumnType("nchar(20)")
                        .IsFixedLength();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nchar(100)")
                        .IsFixedLength();

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("Quantity")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.HasKey("ID");

                    b.HasIndex(new[] { "Name" }, "nameUnique")
                        .IsUnique();

                    b.ToTable("Item", (string)null);
                });

            modelBuilder.Entity("PharmacySystem.Models.Item_Invoice", b =>
                {
                    b.Property<int>("InvoiceID")
                        .HasColumnType("int");

                    b.Property<int>("ItemID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("InvoiceID", "ItemID");

                    b.HasIndex("ItemID");

                    b.ToTable("Item_Invoice", (string)null);
                });

            modelBuilder.Entity("PharmacySystem.Models.Invoice", b =>
                {
                    b.HasOne("PharmacySystem.Models.Employee", "Employee_UsernameNavigation")
                        .WithMany("Invoices")
                        .HasForeignKey("Employee_Username")
                        .HasConstraintName("FK_Invoice_Employee");

                    b.Navigation("Employee_UsernameNavigation");
                });

            modelBuilder.Entity("PharmacySystem.Models.Item_Invoice", b =>
                {
                    b.HasOne("PharmacySystem.Models.Invoice", "Invoice")
                        .WithMany("Item_Invoices")
                        .HasForeignKey("InvoiceID")
                        .IsRequired()
                        .HasConstraintName("FK_Item_Invoice_Invoice");

                    b.HasOne("PharmacySystem.Models.Item", "Item")
                        .WithMany("Item_Invoices")
                        .HasForeignKey("ItemID")
                        .IsRequired()
                        .HasConstraintName("FK_Item_Invoice_Item");

                    b.Navigation("Invoice");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("PharmacySystem.Models.Employee", b =>
                {
                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("PharmacySystem.Models.Invoice", b =>
                {
                    b.Navigation("Item_Invoices");
                });

            modelBuilder.Entity("PharmacySystem.Models.Item", b =>
                {
                    b.Navigation("Item_Invoices");
                });
#pragma warning restore 612, 618
        }
    }
}
